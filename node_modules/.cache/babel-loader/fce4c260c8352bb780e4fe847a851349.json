{"ast":null,"code":"var _jsxFileName = \"/home/ubuntupc/bibliofront/src/Routes.js\";\nimport React, { useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport Login from './Login';\nexport default function Routes() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  return React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/home\",\n    exact: true,\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    exact: true,\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => isLoggedIn ? React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/ubuntupc/bibliofront/src/Routes.js"],"names":["React","useState","useCallback","BrowserRouter","Router","Route","Redirect","Switch","Home","Login","Routes","isLoggedIn","setIsLoggedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,OAA9C;AAEA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,QAHF,EAIEC,MAJF,QAKO,kBALP;AAOA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,MAAT,GAAiB;AAE5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AAEA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,MAAzB;AAA0B,IAAA,SAAS,EAAEO,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,MAA1B;AAA2B,IAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,MAAM,EAAE,MAC5BE,UAAU,GACR,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,GAGR,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADJ;AAaH","sourcesContent":["import React , { useState, useCallback } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Home from './Home';\nimport Login from './Login';\n\nexport default function Routes(){\n     \n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n  \n    return(\n        <Switch>\n          <Route path=\"/home\" exact component={Home} /> \n          <Route path=\"/login\" exact component={Login} /> \n          <Route exact path=\"/\" render={() => (\n            isLoggedIn ? (\n              <Redirect to=\"/home\"/>\n            ) : (\n              <Redirect to=\"/login\"/>\n            )\n          )}/>\n        </Switch>\n    )\n}"]},"metadata":{},"sourceType":"module"}